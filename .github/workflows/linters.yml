name: Lint

on:
  pull_request:

permissions:
  contents: read

jobs:
  lint-actions:
    name: Actions
    runs-on: ubuntu-latest
    steps:
    - name: Setup environment
      uses: ./.github/actions/setup-go
      with:
        fetch-depth: '0'
        download-deps: 'false'
      
    - name: Setup actionlint
      run: bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
      shell: bash

    - name: Run Actions linter
      run: make lint-actions

  fmt-imports:
    name: Format Imports
    runs-on: ubuntu-latest
    steps:
    - name: Setup environment
      uses: ./.github/actions/setup-go
      with:
        fetch-depth: '0'
        download-deps: 'false'

    - name: Run import formatter
      run: make fmt-imports

    - name: Check for uncommitted changes
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          echo "Detected uncommitted changes after Format Imports."
          git status
          git diff
          exit 1
        fi

  lint-code:
    name: GolangCI
    runs-on: ubuntu-latest
    steps:
    - name: Setup environment
      uses: ./.github/actions/setup-go
      with:
        fetch-depth: '0'
        download-deps: 'false'

    - name: Run code linter
      run: make GOLANGCI_LINT_FIX=false GOLANGCI_LINT_BASE_REV=HEAD~ lint-code

    - name: Check for uncommitted changes
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          echo "Detected uncommitted changes after GolangCI."
          git status
          git diff
          exit 1
        fi

  # Keep the final success check job as-is since it's needed for branch protection
  linters-succeed:
    name: All Linters Succeed
    needs: [lint-actions, fmt-imports, lint-code]
    runs-on: ubuntu-latest
    if: always()
    env:
      RESULTS: ${{ toJSON(needs.*.result) }}
    steps:
      - name: Check results
        run: |
          if [[ -n $(echo "$RESULTS" | jq '.[] | select (. != "success")') ]]; then
            exit 1
          fi
