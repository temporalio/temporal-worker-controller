name: Lint

on:
  pull_request:

permissions:
  contents: read

jobs:
  lint:
    name: ${{ matrix.job-name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - job-name: "Actions"
            setup-script: |
              bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
            make-target: "lint-actions"
            check-dirty: false
          - job-name: "Format Imports"
            setup-script: ""
            make-target: "fmt-imports"
            check-dirty: true
          - job-name: "GolangCI"
            setup-script: ""
            make-target: "GOLANGCI_LINT_FIX=false GOLANGCI_LINT_BASE_REV=HEAD~ lint-code"
            check-dirty: true
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
        check-latest: true

    - name: Setup tools
      if: matrix.setup-script != ''
      run: ${{ matrix.setup-script }}
      shell: bash

    - name: Run ${{ matrix.job-name }}
      run: make ${{ matrix.make-target }}

    - name: Check for uncommitted changes
      if: matrix.check-dirty
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          echo "Detected uncommitted changes after ${{ matrix.job-name }}."
          git status
          git diff
          exit 1
        fi

  # Keep the final success check job as-is since it's needed for branch protection
  linters-succeed:
    name: All Linters Succeed
    needs: [lint]
    runs-on: ubuntu-latest
    if: always()
    env:
      RESULTS: ${{ toJSON(needs.*.result) }}
    steps:
      - name: Check results
        run: |
          if [[ -n $(echo "$RESULTS" | jq '.[] | select (. != "success")') ]]; then
            exit 1
          fi
