name: release

on:
  workflow_dispatch:
  release:
    types:
      - published

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Generate GitHub App token
        id: token
        uses: ./.github/actions/github-token
        env:
          TEMPORAL_CICD_APP_ID: ${{ secrets.TEMPORAL_CICD_APP_ID }}
          TEMPORAL_CICD_PRIVATE_KEY: ${{ secrets.TEMPORAL_CICD_PRIVATE_KEY }}

      - name: Setup Go environment
        uses: ./.github/actions/setup-go
        with:
          fetch-depth: '0'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: ./.github/actions/docker-login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PAT: ${{ secrets.DOCKER_PAT }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  helm:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Generate GitHub App token
        id: token
        uses: ./.github/actions/github-token
        env:
          TEMPORAL_CICD_APP_ID: ${{ secrets.TEMPORAL_CICD_APP_ID }}
          TEMPORAL_CICD_PRIVATE_KEY: ${{ secrets.TEMPORAL_CICD_PRIVATE_KEY }}
          
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ steps.token.outputs.token }}
          ref: main
          fetch-depth: 0

      - name: Configure Git
        run: |
          echo ${{ steps.token.outputs.token }} | gh auth login --with-token
          gh auth status -a
          git config --global user.name "temporal-cicd[bot]"
          git config --global user.email "gh-action@users.noreply.github.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.3

      - name: Login to Docker Hub
        uses: ./.github/actions/docker-login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PAT: ${{ secrets.DOCKER_PAT }}

      - name: Bump Helm Chart Version
        id: bump_version
        run: |
          # Get current version from Chart.yaml
          CURRENT_VERSION=$(grep 'version:' helm/temporal-worker-controller/Chart.yaml | awk '{print $2}')
          echo "Current version: $CURRENT_VERSION"

          # Split version into parts
          IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}

          MINOR=$((MINOR + 1))
          PATCH=0

          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"

          # Update Chart.yaml with new version and appVersion
          sed -i "s/version: .*/version: $NEW_VERSION/" helm/temporal-worker-controller/Chart.yaml
          sed -i "s/appVersion: .*/appVersion: ${GITHUB_REF_NAME#v}/" helm/temporal-worker-controller/Chart.yaml

          # Set output variable for use in later steps
          echo "version=$NEW_VERSION" >> "$GITHUB_OUTPUT"

          # Commit the change
          git add helm/temporal-worker-controller/Chart.yaml
          git commit -m "Bump chart version to $NEW_VERSION [skip ci]"
          git push

      - name: Package and Push Helm chart
        run: |
          # Use version from previous step
          VERSION=${{ steps.bump_version.outputs.version }}
          echo "Chart version: $VERSION"

          # Package the chart
          helm package ./helm/temporal-worker-controller

          # Push to Docker Hub
          helm push temporal-worker-controller-${VERSION}.tgz oci://docker.io/temporalio

          echo "âœ… Chart pushed successfully to oci://docker.io/temporalio/temporal-worker-controller:${VERSION}"
